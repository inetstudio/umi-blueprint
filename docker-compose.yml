version: "3.9"

x-networks: &networks
  networks:
    - app-network

x-working_dir: &working_dir
  working_dir: /var/www/${COMPOSE_PROJECT_NAME}

services:
  nginx:
    build:
      context: ./docker/nginx/
      dockerfile: ./Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    volumes:
      - ./:/var/www/${COMPOSE_PROJECT_NAME}:delegated
      - ./docker/nginx/templates:/etc/nginx/templates:rw,cached
      - ./docker/nginx/configs/nginx.conf:/etc/nginx/nginx.conf
    <<: *working_dir
    environment:
      APP_DIR: ${COMPOSE_PROJECT_NAME}
    depends_on:
      - php
      - mysql
      - redis
    ports:
      - 80
    <<: *networks

  php:
    build:
      context: ./docker/php/
      dockerfile: ./Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-php
    volumes:
      - ./:/var/www/${COMPOSE_PROJECT_NAME}:delegated
      - ./docker/php/configs/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./docker/php/configs/opcache-custom.ini:/usr/local/etc/php/conf.d/opcache-custom.ini
      - ./docker/php/configs/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini
      - ./docker/php/configs/xdebug-custom.ini:/usr/local/etc/php/conf.d/xdebug-custom.ini
      - ./docker/php/aliases.sh:/etc/profile.d/aliases.sh
    <<: *working_dir
    environment:
      PHP_IDE_CONFIG: serverName=${COMPOSE_PROJECT_NAME}
      PHP_OPCACHE_PRELOAD: /var/www/${COMPOSE_PROJECT_NAME}/preload.php
    ports:
      - 9000
    <<: *networks

  redis:
    image: redis
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    ports:
      - 6379
    <<: *networks

  mysql:
    image: mysql:5.7.29
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    restart: unless-stopped
    tty: true
    volumes:
      - ./docker/mysql/db/:/var/lib/mysql
      - ./docker/mysql/config/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - 3306
    <<: *networks

  elasticsearch:
    image: elasticsearch:7.10.1
    container_name: ${COMPOSE_PROJECT_NAME}-elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - 9200
    <<: *networks

  blackfire:
    image: blackfire/blackfire
    container_name: ${COMPOSE_PROJECT_NAME}-blackfire
    ports:
      - 8707
    environment:
      BLACKFIRE_SERVER_ID: ${BLACKFIRE_SERVER_ID}
      BLACKFIRE_SERVER_TOKEN: ${BLACKFIRE_SERVER_TOKEN}
      BLACKFIRE_CLIENT_ID: ${BLACKFIRE_CLIENT_ID}
      BLACKFIRE_CLIENT_TOKEN: ${BLACKFIRE_CLIENT_TOKEN}
    <<: *networks

networks:
  app-network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME}-network
